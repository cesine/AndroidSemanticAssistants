<?xml version="1.0"?>
<!--
   Semantic Assistants - http://www.semanticsoftware.info/semantic-assistants

   This file is part of the Semantic Assistants architecture.

   Copyright (C) 2013-2014 Semantic Software Lab, http://www.semanticsoftware.info

   The Semantic Assistants architecture is free software: you can
   redistribute and/or modify it under the terms of the GNU Affero General
   Public License as published by the Free Software Foundation, either
   version 3 of the License, or (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Affero General Public License for more details.
   
   You should have received a copy of the GNU Affero General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<!DOCTYPE project>

<project name="SemanticAssistants-portlet" basedir="." default="resolve" xmlns:ivy="antlib:org.apache.ivy.ant" xmlns="antlib:org.apache.tools.ant">
      
      <!-- Relative path to the SA root directory -->
      <property name="semassist.home"           value="../../../"/>    
      
      <!-- Reference to the Liferay default build.xml file -->
      <import file="../build-common-portlet.xml" />

      <target name="init" description="Initialize build properties">	  
	<!-- Ivy properties - do not edit -->
	<property name="ivy.install.version" value="2.0.0-beta2"/>
	<property name="ivy.home" value="ivy" />
	<property name="ivy.jar.dir" value="${ivy.home}/lib" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>
    
	<!-- build properties - do not edit -->
	<property name="project.name"      value="SemanticAssistants-portlet"/>
	<property name="war.name"      value="${project.name}.war"/>
	<property name="dist.dir"       value="dist"/>
	<property name="docs.dir"       value="docs"/>
	<property name="web.dir"       value="WEB-INF"/>
	<property name="src.dir"       value="${web.dir}/src"/>
	<property name="lib.dir"       value="docroot/${web.dir}/lib"/>
	<property name="csal.jar"       value="${semassist.home}/CSAL/dist/CSAL.jar"/>
	<path id="compile.classpath">
	  <fileset dir="${lib.dir}" >
	    <include name="*.jar" />
	  </fileset>
	</path>
	<!-- Ivy task definition -->
	<!--taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpath="${ivy.jar.dir}/ivy.jar"/-->
      </target>

      <!-- Disabled the shortcut target for the first iteration>
      <target name="prepare" description="Shortcut target for resolving the dependencies and generating the service files before compiling">
	<antcall target="resolve"/>
	<antcall target="build-service"/>
      </target-->

  <!-- If ivy.jar already exists, the build will skip this step -->
  <target name="download-ivy" description="Download ivy.jar from Maven central repository to resolve dependencies.">
    <mkdir dir="${ivy.jar.dir}"/>
    <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
      dest="${ivy.jar.file}" usetimestamp="true"/>
  </target>

  <target name="resolve" depends="init, download-ivy" description="Download JAR files via ivy">
 	<path id="ivy.lib.path">
    	<fileset dir="ivy/lib" includes="*.jar"/>
  	</path>
	<taskdef resource="org/apache/ivy/ant/antlib.xml"
         uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/> 
 	<ivy:settings file="${basedir}/ivysettings.xml" />
	<ivy:retrieve pattern="${lib.dir}/[artifact].[ext]"/>

	<!-- Semantic Assistants Client-Side Abstraction Layer -->
	<!--copy file="${csal.jar}" todir="${lib.dir}"/-->
	<antcall target="copyCSAL"/>

  </target>
  
 <target name="copyCSAL" depends="init" description="Copies CSAL.jar file from the build server workspace -- temporary solution">
  <get src="http://assistant.cs.concordia.ca:8080/job/Semantic%20Assistants/lastSuccessfulBuild/artifact/semantic-assist/CSAL/dist/CSAL.jar" dest="${lib.dir}"/>
 </target>
   <target name="clean" depends="init" description="Delete generated class files and ivy folder">
   
	<!-- delete dependency JAR files downloaded by ivy (including the ivy itself) -->
	<delete dir="${ivy.home}"/>
   	<delete includeEmptyDirs="true">
	  <fileset dir="docroot/${web.dir}/classes" includes="**/*"/>
	</delete>
	<delete includeEmptyDirs="true">
	  <fileset dir="${lib.dir}" includes="**/*" excludes="CSAL.jar"/>
	</delete>
	
	<!-- delete files generated by build-service>
	<delete dir="docroot/${web.dir}/service"/>
	<delete dir="docroot/${web.dir}/sql"/>
	<delete file="docroot/js/service.js"/>
	<delete dir="docroot/${web.dir}/src/com/semanticassistants/client/portal/liferay/persistence"/>
	<delete dir="docroot/${web.dir}/src/META-INF"/>
	<delete file="docroot/${web.dir}/src/service.properties"/-->
   </target>
   
   <!-- Findbugs analysis -->
    <target name="findbugs" depends="init, deploy">
      <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" 
            classpath="${findbugs.classpath}" />
      <findbugs home="${findbugs.home}"      
            output="xml:withMessages"
            outputFile="findbugsXml.SA.xml" >
        <auxClasspath refid="compile.classpath" />	
	<sourcePath path="${src.dir}" />
	<class location="docroot/${web.dir}/classes" />
      </findbugs>
    </target>

    <!-- Generates Javadoc output -->
    <target name="javadoc" depends="init">
        <javadoc sourcepath="${src.dir}"
		 destdir="javadoc"
		 defaultexcludes="yes" author="true" version="true"
		 use="true" link="true" encoding="UTF-8" 
		 windowtitle="Semantic Assistants: Liferay Integration">
	  <sourcepath>
            <pathelement location="${src.dir}" />
	  </sourcepath>
          <doctitle><![CDATA[<h1>Semantic Assistants: Liferay Integration</h1>]]></doctitle>
          <bottom><![CDATA[<i>Copyright &copy; 2013-2014 Semantic Software Lab. http://www.semanticsoftware.info/</i>]]></bottom>
          </javadoc>
    </target>
   
   <!--target name="clean-all" depends="init" description="Delete all generated files including the WAR file">
    	<antcall target="clean"/>
    	<delete dir="${dist.dir}"/>
    </target-->
</project>

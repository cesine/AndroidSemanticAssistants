<?xml version="1.0"?>

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is the Semantic Assistants Firefox Extension.
   -
   - The Initial Developer of the Original Code is
   - Semantic Software Lab (http://www.semanticsoftware.info)
   - Portions created by the Initial Developer are Copyright (C) 2011
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   - 	Bahar Sateli
   -	Jason Tan
   -	Kevin Tung
   -	Paola Jimenez
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<!-- This overlay is common to Firefox 3 and Firefox 4. -->

<!DOCTYPE overlay SYSTEM "chrome://SemanticAssistants/locale/SAOverlay.dtd">

<overlay id="SemanticAssistants"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
    
    <script src="SAOverlayHelper-fx.js"/>
    
    <!-- Broadcast listener to open/close the sidebar -->
	<broadcasterset id="mainBroadcasterSet"> 
        <broadcaster id="SASidebarBroadcaster" 
                label="&SASidebarBroadcaster.title;"
                autoCheck="false"
                type="checkbox"
                group="sidebar"
                sidebarurl="chrome://SemanticAssistants/content/SASidebarXUL.xul"
                sidebartitle="&SASidebarBroadcaster.title;"
                oncommand="toggleSidebar('SASidebarBroadcaster'); event.stopPropagation();" />
    </broadcasterset>
    
    <!-- Access keys to open/close the sidebar -->
	<keyset id="mainKeyset">
        <key id="key-toggleSidebar" command="SASidebarBroadcaster"
                key="&SASidebarBroadcaster.commandkey;" 
                modifiers="&SASidebarBroadcaster.modifierskey;" />
    </keyset>
    
    <!-- The context menu (opens on right-click) -->
	<popup id="contentAreaContextMenu">
        <menuseparator/>
        <menuitem id="AvailableAssistants-Item"
                label="&AvailableAssistants;"
                accesskey="&AvailableAssistants.Item.accesskey;"
                oncommand="SAOverlay.onMenuItemCommand(event);" />
		<menuitem id="GlobalSettings-Item"
                label="&GlobalSettings;"
                accesskey="&GlobalSettings.Item.accesskey;"
                oncommand="SAOverlay.onGlobalSettingsMenuItemCommand(event);" />
    </popup>
    
    <menupopup id="viewSidebarMenu">
        <menuitem key="key-toggleSidebar" observes="SASidebarBroadcaster"  />
    </menupopup>
    
    <!-- The main menu on the Firefox menubar -->
	<menubar id="main-menubar">
        <menu id="SemanticAssistants-Menu" label="&SemanticAssistants;"
                accesskey="&SemanticAssistants.Menu.accesskey;" insertafter="helpMenu">
            <menupopup>
                <menuitem id="AvailableAssistants-Item"
                        label="&AvailableAssistants;"
                        accesskey="&AvailableAssistants.Item.accesskey;"
                        oncommand="SAOverlay.onMenuItemCommand(event);" />
                <menuitem key="key-toggleSidebar" observes="SASidebarBroadcaster"  />
                <menuseparator/>
                <menuitem id="GlobalSettings-Item"
                        label="&GlobalSettings;"
                        accesskey="&GlobalSettings.Item.accesskey;"
                        oncommand="SAOverlay.onGlobalSettingsMenuItemCommand(event);" />
            </menupopup>
        </menu>
    </menubar>
    
    <!-- The toolbar button on the right -->
	<toolbarpalette id="BrowserToolbarPalette">
        <toolbarbutton 
                type="menu-button" 
                id="availableAssistants-menu-button" 
                insertbefore="print-button"
                class="toolbarbutton-1 chromeclass-toolbar-additional"
                label="&LastAssistant.ToolbarButton;" 
                tooltiptext="&LastAssistant.ToolbarButton.TooltipText;"
				oncommand="SAOverlay.headlessCall();">
				<menupopup>
                <menuitem id="lastCalledService-Item"
                        label="&LastAssistant;"
                        accesskey="&LastAssistant.Item.accesskey;"
                        default="true"/>
				<menuitem id="AvailableAssistants-Item"
                        label="&AvailableAssistants;"
                        accesskey="&AvailableAssistants.Item.accesskey;"
                        oncommand="SAOverlay.onMenuItemCommand(event); event.stopPropagation();" 
						/>
                <menuitem key="key-toggleSidebar" 
                        observes="SASidebarBroadcaster" />
                <menuseparator/>
                <menuitem id="GlobalSettings-Item"
                        label="&GlobalSettings;"
                        accesskey="&GlobalSettings.Item.accesskey;"
                        oncommand="SAOverlay.onGlobalSettingsMenuItemCommand(event); event.stopPropagation();" />
            </menupopup>
        </toolbarbutton>
    </toolbarpalette>
    
</overlay>